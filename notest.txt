const canvas = document.getElementById("c");
let fov = 5;
let aspect = 1;
let near = 0.1;
let far = 1000;

function renderScene() {
  const scene = new THREE.Scene();
  const camera = new THREE.PerspectiveCamera(fov, aspect, far, near);
  camera.position.set(0, 0, 100);

  const cubeGeometry = new THREE.IcosahedronGeometry();
  const cubeMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000,wireframe: true });

  const cube = new THREE.Mesh(cubeGeometry, cubeMaterial);
  // cube.position.set(0, 0, 100)
  cube.rotation.set(0, 100, 100);

  scene.add(cube);
  console.log(cube);

 
  const planeGeometry = new THREE.PlaneGeometry(4, 1, 4, 1)
  const planeMaterial = new THREE.MeshBasicMaterial( {color: 0xfffff })
  const plane = new THREE.Mesh(planeGeometry, planeMaterial)
  // plane.position.set(100, 100)
  // plane.postion.x = 100;
  plane.rotation.set(600, 200, 500)
  scene.add(plane)
  console.log(plane)

  const renderer = new THREE.WebGLRenderer({ canvas });
  renderer.setSize(window.innerWidth, window.innerHeight);

  document.body.appendChild(renderer.domElement);
  scene.background = new THREE.Color("blue");
  renderer.render(scene, camera);

  function animate(time) {
    time *= 0.001;

    cube.rotation.z = time;
    cube.rotation.y = time;
    requestAnimationFrame(animate);
    renderer.render(scene, camera);
  }
  requestAnimationFrame(animate);
}

renderScene();
